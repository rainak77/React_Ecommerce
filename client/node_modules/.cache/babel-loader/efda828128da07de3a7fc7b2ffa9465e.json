{"ast":null,"code":"import{createSelector}from'reselect';import memoize from'lodash.memoize';var selectShop=function selectShop(state){return state.shop;};//bringing shop data as it is 'as an object'\nexport var selectCollections=createSelector([selectShop],function(shop){return shop.collections;});// Transform shop data into an array\nexport var selectCollectionforPreview=createSelector([selectCollections],function(collections){return collections?Object.keys(collections).map(function(key){return collections[key];}):[];});//Selecting user data using Specific url-Parameter\nexport var selectCollection=memoize(function(collectionUrlParam){return createSelector([selectCollections],function(collections){return collections?collections[collectionUrlParam]:null;});});export var selectIsCollectionFetching=createSelector([selectShop],function(shop){return shop.isFetching;});export var selectIscollectionLoaded=createSelector([selectShop],function(shop){return!!shop.collections;});","map":{"version":3,"sources":["D:/monsters/crwn-clothing/client/src/redux/shop/shop.selector.js"],"names":["createSelector","memoize","selectShop","state","shop","selectCollections","collections","selectCollectionforPreview","Object","keys","map","key","selectCollection","collectionUrlParam","selectIsCollectionFetching","isFetching","selectIscollectionLoaded"],"mappings":"AAAA,OAASA,cAAT,KAA+B,UAA/B,CACA,MAAOC,CAAAA,OAAP,KAAoB,gBAApB,CAGA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAAAC,KAAK,QAAIA,CAAAA,KAAK,CAACC,IAAV,EAAxB,CAEA;AACA,MAAO,IAAMC,CAAAA,iBAAiB,CAAGL,cAAc,CAC3C,CAACE,UAAD,CAD2C,CAE3C,SAAAE,IAAI,QAAIA,CAAAA,IAAI,CAACE,WAAT,EAFuC,CAAxC,CAMP;AACA,MAAO,IAAMC,CAAAA,0BAA0B,CAAGP,cAAc,CACpD,CAACK,iBAAD,CADoD,CAEpD,SAAAC,WAAW,QAAIA,CAAAA,WAAW,CACpBE,MAAM,CAACC,IAAP,CAAYH,WAAZ,EAAyBI,GAAzB,CAA6B,SAAAC,GAAG,QAAIL,CAAAA,WAAW,CAACK,GAAD,CAAf,EAAhC,CADoB,CACoC,EADnD,EAFyC,CAAjD,CAQP;AACA,MAAO,IAAMC,CAAAA,gBAAgB,CAAGX,OAAO,CAAC,SAACY,kBAAD,QACpCb,CAAAA,cAAc,CACV,CAACK,iBAAD,CADU,CAEV,SAAAC,WAAW,QAAIA,CAAAA,WAAW,CAAGA,WAAW,CAACO,kBAAD,CAAd,CAAqC,IAApD,EAFD,CADsB,EAAD,CAAhC,CAOP,MAAO,IAAMC,CAAAA,0BAA0B,CAAGd,cAAc,CACpD,CAACE,UAAD,CADoD,CAEpD,SAAAE,IAAI,QAAIA,CAAAA,IAAI,CAACW,UAAT,EAFgD,CAAjD,CAKP,MAAO,IAAMC,CAAAA,wBAAwB,CAAGhB,cAAc,CAClD,CAACE,UAAD,CADkD,CAElD,SAAAE,IAAI,QAAI,CAAC,CAACA,IAAI,CAACE,WAAX,EAF8C,CAA/C","sourcesContent":["import { createSelector } from 'reselect';\r\nimport memoize from 'lodash.memoize';\r\n\r\n\r\nconst selectShop = state => state.shop;\r\n\r\n//bringing shop data as it is 'as an object'\r\nexport const selectCollections = createSelector(\r\n    [selectShop],\r\n    shop => shop.collections\r\n);\r\n\r\n\r\n// Transform shop data into an array\r\nexport const selectCollectionforPreview = createSelector(\r\n    [selectCollections],\r\n    collections => collections\r\n        ? Object.keys(collections).map(key => collections[key]) : []\r\n\r\n);\r\n\r\n\r\n//Selecting user data using Specific url-Parameter\r\nexport const selectCollection = memoize((collectionUrlParam) =>\r\n    createSelector(\r\n        [selectCollections],\r\n        collections => collections ? collections[collectionUrlParam] : null\r\n    )\r\n);\r\n\r\nexport const selectIsCollectionFetching = createSelector(\r\n    [selectShop],\r\n    shop => shop.isFetching\r\n);\r\n\r\nexport const selectIscollectionLoaded = createSelector(\r\n    [selectShop],\r\n    shop => !!shop.collections\r\n);"]},"metadata":{},"sourceType":"module"}