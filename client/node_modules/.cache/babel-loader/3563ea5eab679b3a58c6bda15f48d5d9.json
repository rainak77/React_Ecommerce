{"ast":null,"code":"import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nconst config = {\n  apiKey: \"AIzaSyCjtchCbn4ZrHORM-coEDbj4AF-CBCd0yQ\",\n  authDomain: \"crwn-db-736cc.firebaseapp.com\",\n  databaseURL: \"https://crwn-db-736cc.firebaseio.com\",\n  projectId: \"crwn-db-736cc\",\n  storageBucket: \"crwn-db-736cc.appspot.com\",\n  messagingSenderId: \"27153439819\",\n  appId: \"1:27153439819:web:9210765b2df55cad44c1ce\",\n  measurementId: \"G-JDQMN1BNM7\"\n};\nfirebase.initializeApp(config);\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  console.log(\"arif=\" + additionalData);\n  if (!userAuth) return;\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const snapShot = await userRef.get();\n\n  if (!snapShot.exists) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionalData\n      });\n    } catch (error) {\n      console.log('error creating data', error.message);\n    }\n  }\n\n  return userRef;\n};\nexport const convertCollectionsSnapshotToMap = collections => {\n  const transformedcollection = collections.docs.map(doc => {\n    const {\n      title,\n      items\n    } = doc.data();\n    return {\n      routeName: encodeURI(title.toLowerCase()),\n      id: doc.id,\n      title,\n      items\n    };\n  });\n  return transformedcollection.reduce((acc, item) => {\n    acc[item.title.toLowerCase()] = item;\n    return acc;\n  }, {});\n};\nexport const getCurrentUser = () => {\n  return new Promise(re);\n};\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nexport const googleProvider = new firebase.auth.GoogleAuthProvider();\ngoogleProvider.setCustomParameters({\n  promt: 'select_account'\n});\nexport const signInWithGoogle = () => {\n  return auth.signInWithPopup(googleProvider);\n};\nexport default firebase;","map":{"version":3,"sources":["D:/monsters/crwn-clothing/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","createUserProfileDocument","userAuth","additionalData","console","log","userRef","firestore","doc","uid","snapShot","get","exists","displayName","email","createdAt","Date","set","error","message","convertCollectionsSnapshotToMap","collections","transformedcollection","docs","map","title","items","data","routeName","encodeURI","toLowerCase","id","reduce","acc","item","getCurrentUser","Promise","re","auth","googleProvider","GoogleAuthProvider","setCustomParameters","promt","signInWithGoogle","signInWithPopup"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AAEA,MAAMC,MAAM,GAAG;AACXC,EAAAA,MAAM,EAAE,yCADG;AAEXC,EAAAA,UAAU,EAAE,+BAFD;AAGXC,EAAAA,WAAW,EAAE,sCAHF;AAIXC,EAAAA,SAAS,EAAE,eAJA;AAKXC,EAAAA,aAAa,EAAE,2BALJ;AAMXC,EAAAA,iBAAiB,EAAE,aANR;AAOXC,EAAAA,KAAK,EAAE,0CAPI;AAQXC,EAAAA,aAAa,EAAE;AARJ,CAAf;AAWAT,QAAQ,CAACU,aAAT,CAAuBT,MAAvB;AAGA,OAAO,MAAMU,yBAAyB,GAAG,OAAOC,QAAP,EAAiBC,cAAjB,KAAoC;AACzEC,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAUF,cAAtB;AACA,MAAI,CAACD,QAAL,EAAe;AAEf,QAAMI,OAAO,GAAGC,SAAS,CAACC,GAAV,CAAe,SAAQN,QAAQ,CAACO,GAAI,EAApC,CAAhB;AACA,QAAMC,QAAQ,GAAG,MAAMJ,OAAO,CAACK,GAAR,EAAvB;;AAEA,MAAI,CAACD,QAAQ,CAACE,MAAd,EAAsB;AAClB,UAAM;AAAEC,MAAAA,WAAF;AAAeC,MAAAA;AAAf,QAAyBZ,QAA/B;AACA,UAAMa,SAAS,GAAG,IAAIC,IAAJ,EAAlB;;AAEA,QAAI;AACA,YAAMV,OAAO,CAACW,GAAR,CAAY;AACdJ,QAAAA,WADc;AAEdC,QAAAA,KAFc;AAGdC,QAAAA,SAHc;AAId,WAAGZ;AAJW,OAAZ,CAAN;AAMH,KAPD,CAQA,OAAOe,KAAP,EAAc;AACVd,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCa,KAAK,CAACC,OAAzC;AACH;AACJ;;AACD,SAAOb,OAAP;AACH,CAxBM;AA0BP,OAAO,MAAMc,+BAA+B,GAAIC,WAAD,IAAiB;AAC5D,QAAMC,qBAAqB,GAAGD,WAAW,CAACE,IAAZ,CAAiBC,GAAjB,CAAqBhB,GAAG,IAAI;AACtD,UAAM;AAAEiB,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAmBlB,GAAG,CAACmB,IAAJ,EAAzB;AACA,WAAO;AACHC,MAAAA,SAAS,EAAEC,SAAS,CAACJ,KAAK,CAACK,WAAN,EAAD,CADjB;AAEHC,MAAAA,EAAE,EAAEvB,GAAG,CAACuB,EAFL;AAGHN,MAAAA,KAHG;AAIHC,MAAAA;AAJG,KAAP;AAMH,GAR6B,CAA9B;AASA,SAAOJ,qBAAqB,CAACU,MAAtB,CAA6B,CAACC,GAAD,EAAMC,IAAN,KAAe;AAC/CD,IAAAA,GAAG,CAACC,IAAI,CAACT,KAAL,CAAWK,WAAX,EAAD,CAAH,GAAgCI,IAAhC;AACA,WAAOD,GAAP;AACH,GAHM,EAGJ,EAHI,CAAP;AAIH,CAdM;AAgBP,OAAO,MAAME,cAAc,GAAG,MAAM;AAChC,SAAO,IAAIC,OAAJ,CAAaC,EAAb,CAAP;AACH,CAFM;AAOP,OAAO,MAAMC,IAAI,GAAGhD,QAAQ,CAACgD,IAAT,EAAb;AACP,OAAO,MAAM/B,SAAS,GAAGjB,QAAQ,CAACiB,SAAT,EAAlB;AAEP,OAAO,MAAMgC,cAAc,GAAG,IAAIjD,QAAQ,CAACgD,IAAT,CAAcE,kBAAlB,EAAvB;AACPD,cAAc,CAACE,mBAAf,CAAmC;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAAnC;AAEA,OAAO,MAAMC,gBAAgB,GAAG,MAAM;AAClC,SAAOL,IAAI,CAACM,eAAL,CAAqBL,cAArB,CAAP;AACH,CAFM;AAGP,eAAejD,QAAf","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nconst config = {\r\n    apiKey: \"AIzaSyCjtchCbn4ZrHORM-coEDbj4AF-CBCd0yQ\",\r\n    authDomain: \"crwn-db-736cc.firebaseapp.com\",\r\n    databaseURL: \"https://crwn-db-736cc.firebaseio.com\",\r\n    projectId: \"crwn-db-736cc\",\r\n    storageBucket: \"crwn-db-736cc.appspot.com\",\r\n    messagingSenderId: \"27153439819\",\r\n    appId: \"1:27153439819:web:9210765b2df55cad44c1ce\",\r\n    measurementId: \"G-JDQMN1BNM7\"\r\n};\r\n\r\nfirebase.initializeApp(config);\r\n\r\n\r\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\r\n    console.log(\"arif=\" + additionalData);\r\n    if (!userAuth) return;\r\n\r\n    const userRef = firestore.doc(`users/${userAuth.uid}`);\r\n    const snapShot = await userRef.get();\r\n\r\n    if (!snapShot.exists) {\r\n        const { displayName, email } = userAuth;\r\n        const createdAt = new Date();\r\n\r\n        try {\r\n            await userRef.set({\r\n                displayName,\r\n                email,\r\n                createdAt,\r\n                ...additionalData\r\n            });\r\n        }\r\n        catch (error) {\r\n            console.log('error creating data', error.message);\r\n        }\r\n    }\r\n    return userRef;\r\n};\r\n\r\nexport const convertCollectionsSnapshotToMap = (collections) => {\r\n    const transformedcollection = collections.docs.map(doc => {\r\n        const { title, items } = doc.data();\r\n        return {\r\n            routeName: encodeURI(title.toLowerCase()),\r\n            id: doc.id,\r\n            title,\r\n            items\r\n        };\r\n    });\r\n    return transformedcollection.reduce((acc, item) => {\r\n        acc[item.title.toLowerCase()] = item;\r\n        return acc;\r\n    }, {});\r\n};\r\n\r\nexport const getCurrentUser = () => {\r\n    return new Promise((re));\r\n};\r\n\r\n\r\n\r\n\r\nexport const auth = firebase.auth();\r\nexport const firestore = firebase.firestore();\r\n\r\nexport const googleProvider = new firebase.auth.GoogleAuthProvider();\r\ngoogleProvider.setCustomParameters({ promt: 'select_account' });\r\n\r\nexport const signInWithGoogle = () => {\r\n    return auth.signInWithPopup(googleProvider);\r\n};\r\nexport default firebase;"]},"metadata":{},"sourceType":"module"}