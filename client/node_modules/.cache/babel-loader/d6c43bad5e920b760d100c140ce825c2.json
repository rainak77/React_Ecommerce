{"ast":null,"code":"import _regeneratorRuntime from\"D:\\\\monsters\\\\crwn-clothing\\\\client\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _objectSpread from\"D:\\\\monsters\\\\crwn-clothing\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _asyncToGenerator from\"D:\\\\monsters\\\\crwn-clothing\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import firebase from'firebase/app';import'firebase/firestore';import'firebase/auth';var config={apiKey:\"AIzaSyCjtchCbn4ZrHORM-coEDbj4AF-CBCd0yQ\",authDomain:\"crwn-db-736cc.firebaseapp.com\",databaseURL:\"https://crwn-db-736cc.firebaseio.com\",projectId:\"crwn-db-736cc\",storageBucket:\"crwn-db-736cc.appspot.com\",messagingSenderId:\"27153439819\",appId:\"1:27153439819:web:9210765b2df55cad44c1ce\",measurementId:\"G-JDQMN1BNM7\"};firebase.initializeApp(config);export var createUserProfileDocument=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(userAuth,additionalData){var userRef,snapShot,displayName,email,createdAt;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:console.log(\"arif=\"+additionalData);if(userAuth){_context.next=3;break;}return _context.abrupt(\"return\");case 3:userRef=firestore.doc(\"users/\".concat(userAuth.uid));_context.next=6;return userRef.get();case 6:snapShot=_context.sent;if(snapShot.exists){_context.next=18;break;}displayName=userAuth.displayName,email=userAuth.email;createdAt=new Date();_context.prev=10;_context.next=13;return userRef.set(_objectSpread({displayName:displayName,email:email,createdAt:createdAt},additionalData));case 13:_context.next=18;break;case 15:_context.prev=15;_context.t0=_context[\"catch\"](10);console.log('error creating data',_context.t0.message);case 18:return _context.abrupt(\"return\",userRef);case 19:case\"end\":return _context.stop();}}},_callee,null,[[10,15]]);}));return function createUserProfileDocument(_x,_x2){return _ref.apply(this,arguments);};}();export var convertCollectionsSnapshotToMap=function convertCollectionsSnapshotToMap(collections){var transformedcollection=collections.docs.map(function(doc){var _doc$data=doc.data(),title=_doc$data.title,items=_doc$data.items;return{routeName:encodeURI(title.toLowerCase()),id:doc.id,title:title,items:items};});return transformedcollection.reduce(function(acc,item){acc[item.title.toLowerCase()]=item;return acc;},{});};export var getCurrentUser=function getCurrentUser(){return new Promise(function(resolve,reject){var unsubscribe=auth.onAuthStateChanged(function(userAuth){unsubscribe();resolve(userAuth);},reject);});};export var auth=firebase.auth();export var firestore=firebase.firestore();export var googleProvider=new firebase.auth.GoogleAuthProvider();googleProvider.setCustomParameters({promt:'select_account'});export var signInWithGoogle=function signInWithGoogle(){return auth.signInWithPopup(googleProvider);};export default firebase;","map":{"version":3,"sources":["D:/monsters/crwn-clothing/client/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","createUserProfileDocument","userAuth","additionalData","console","log","userRef","firestore","doc","uid","get","snapShot","exists","displayName","email","createdAt","Date","set","message","convertCollectionsSnapshotToMap","collections","transformedcollection","docs","map","data","title","items","routeName","encodeURI","toLowerCase","id","reduce","acc","item","getCurrentUser","Promise","resolve","reject","unsubscribe","auth","onAuthStateChanged","googleProvider","GoogleAuthProvider","setCustomParameters","promt","signInWithGoogle","signInWithPopup"],"mappings":"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","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nconst config = {\r\n    apiKey: \"AIzaSyCjtchCbn4ZrHORM-coEDbj4AF-CBCd0yQ\",\r\n    authDomain: \"crwn-db-736cc.firebaseapp.com\",\r\n    databaseURL: \"https://crwn-db-736cc.firebaseio.com\",\r\n    projectId: \"crwn-db-736cc\",\r\n    storageBucket: \"crwn-db-736cc.appspot.com\",\r\n    messagingSenderId: \"27153439819\",\r\n    appId: \"1:27153439819:web:9210765b2df55cad44c1ce\",\r\n    measurementId: \"G-JDQMN1BNM7\"\r\n};\r\n\r\nfirebase.initializeApp(config);\r\n\r\n\r\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\r\n    console.log(\"arif=\" + additionalData);\r\n    if (!userAuth) return;\r\n\r\n    const userRef = firestore.doc(`users/${userAuth.uid}`);\r\n    const snapShot = await userRef.get();\r\n\r\n    if (!snapShot.exists) {\r\n        const { displayName, email } = userAuth;\r\n        const createdAt = new Date();\r\n\r\n        try {\r\n            await userRef.set({\r\n                displayName,\r\n                email,\r\n                createdAt,\r\n                ...additionalData\r\n            });\r\n        }\r\n        catch (error) {\r\n            console.log('error creating data', error.message);\r\n        }\r\n    }\r\n    return userRef;\r\n};\r\n\r\nexport const convertCollectionsSnapshotToMap = (collections) => {\r\n    const transformedcollection = collections.docs.map(doc => {\r\n        const { title, items } = doc.data();\r\n        return {\r\n            routeName: encodeURI(title.toLowerCase()),\r\n            id: doc.id,\r\n            title,\r\n            items\r\n        };\r\n    });\r\n    return transformedcollection.reduce((acc, item) => {\r\n        acc[item.title.toLowerCase()] = item;\r\n        return acc;\r\n    }, {});\r\n};\r\n\r\nexport const getCurrentUser = () => {\r\n    return new Promise((resolve, reject) => {\r\n        const unsubscribe = auth.onAuthStateChanged((userAuth) => {\r\n            unsubscribe();\r\n            resolve(userAuth);\r\n        }, reject);\r\n    });\r\n};\r\n\r\n\r\n\r\n\r\nexport const auth = firebase.auth();\r\nexport const firestore = firebase.firestore();\r\n\r\nexport const googleProvider = new firebase.auth.GoogleAuthProvider();\r\ngoogleProvider.setCustomParameters({ promt: 'select_account' });\r\n\r\nexport const signInWithGoogle = () => {\r\n    return auth.signInWithPopup(googleProvider);\r\n};\r\nexport default firebase;"]},"metadata":{},"sourceType":"module"}