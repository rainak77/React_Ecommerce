{"ast":null,"code":"var _jsxFileName = \"D:\\\\monsters\\\\crwn-clothing\\\\src\\\\pages\\\\shop\\\\shop.component.jsx\";\nimport React from 'react';\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\nimport { Route } from 'react-router-dom';\nimport CollectionPage from '../collection/collection.component';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { selectIsCollectionFetching, selectIscollectionLoaded } from '../../redux/shop/shop.selector';\nimport { fetchCollectionsStartAsync } from '../../redux/shop/shop.action';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\nconst CollectionOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n  componentDidMount() {\n    const {\n      fetchCollectionsStartAsync\n    } = this.props;\n    fetchCollectionsStartAsync();\n  }\n\n  render() {\n    const {\n      match,\n      loading,\n      isCollectionLoaded\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"shop-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      render: props => /*#__PURE__*/React.createElement(CollectionOverviewWithSpinner, Object.assign({\n        isLoading: loading\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 40\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      render: props => /*#__PURE__*/React.createElement(CollectionWithSpinner, Object.assign({\n        isLoading: !isCollectionLoaded\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 40\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n  loading: selectIsCollectionFetching,\n  isCollectionLoaded: selectIscollectionLoaded\n});\n\nconst mapdispatchToProps = dispatch => ({\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n});\n\nexport default connect(mapStateToProps, mapdispatchToProps)(ShopPage);","map":{"version":3,"sources":["D:/monsters/crwn-clothing/src/pages/shop/shop.component.jsx"],"names":["React","CollectionsOverview","Route","CollectionPage","connect","createStructuredSelector","selectIsCollectionFetching","selectIscollectionLoaded","fetchCollectionsStartAsync","WithSpinner","CollectionOverviewWithSpinner","CollectionWithSpinner","ShopPage","Component","componentDidMount","props","render","match","loading","isCollectionLoaded","path","mapStateToProps","mapdispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,mBAAP,MAAgC,sEAAhC;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,0BAAT,EAAqCC,wBAArC,QAAqE,gCAArE;AACA,SAASC,0BAAT,QAA2C,8BAA3C;AAEA,OAAOC,WAAP,MAAwB,sDAAxB;AAEA,MAAMC,6BAA6B,GAAGD,WAAW,CAACR,mBAAD,CAAjD;AACA,MAAMU,qBAAqB,GAAGF,WAAW,CAACN,cAAD,CAAzC;;AAEA,MAAMS,QAAN,SAAuBZ,KAAK,CAACa,SAA7B,CAAuC;AAEnCC,EAAAA,iBAAiB,GAAG;AAChB,UAAM;AAAEN,MAAAA;AAAF,QAAiC,KAAKO,KAA5C;AACAP,IAAAA,0BAA0B;AAC7B;;AAEDQ,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA,OAAT;AAAkBC,MAAAA;AAAlB,QAAyC,KAAKJ,KAApD;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AACI,MAAA,IAAI,EAAG,GAAEE,KAAK,CAACG,IAAK,EADxB;AAEI,MAAA,MAAM,EAAGL,KAAD,iBAAW,oBAAC,6BAAD;AAA+B,QAAA,SAAS,EAAEG;AAA1C,SAAsDH,KAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAII,oBAAC,KAAD;AACI,MAAA,IAAI,EAAG,GAAEE,KAAK,CAACG,IAAK,gBADxB;AAEI,MAAA,MAAM,EAAGL,KAAD,iBAAW,oBAAC,qBAAD;AAAuB,QAAA,SAAS,EAAE,CAACI;AAAnC,SAA0DJ,KAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,CADJ;AAWH;;AApBkC;;AAuBvC,MAAMM,eAAe,GAAGhB,wBAAwB,CAAC;AAC7Ca,EAAAA,OAAO,EAAEZ,0BADoC;AAE7Ca,EAAAA,kBAAkB,EAAEZ;AAFyB,CAAD,CAAhD;;AAKA,MAAMe,kBAAkB,GAAGC,QAAQ,KAAK;AACpCf,EAAAA,0BAA0B,EAAE,MAAMe,QAAQ,CAACf,0BAA0B,EAA3B;AADN,CAAL,CAAnC;;AAKA,eAAeJ,OAAO,CAACiB,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CV,QAA7C,CAAf","sourcesContent":["import React from 'react';\r\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\r\nimport { Route } from 'react-router-dom';\r\nimport CollectionPage from '../collection/collection.component';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport { selectIsCollectionFetching, selectIscollectionLoaded } from '../../redux/shop/shop.selector';\r\nimport { fetchCollectionsStartAsync } from '../../redux/shop/shop.action';\r\n\r\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\r\n\r\nconst CollectionOverviewWithSpinner = WithSpinner(CollectionsOverview);\r\nconst CollectionWithSpinner = WithSpinner(CollectionPage);\r\n\r\nclass ShopPage extends React.Component {\r\n   \r\n    componentDidMount() {\r\n        const { fetchCollectionsStartAsync } = this.props;\r\n        fetchCollectionsStartAsync();\r\n    }\r\n\r\n    render() {\r\n        const { match, loading, isCollectionLoaded } = this.props;\r\n        return (\r\n            <div className='shop-page'>\r\n                <Route exact\r\n                    path={`${match.path}`}\r\n                    render={(props) => <CollectionOverviewWithSpinner isLoading={loading}{...props} />} />\r\n                <Route\r\n                    path={`${match.path}/:collectionId`}\r\n                    render={(props) => <CollectionWithSpinner isLoading={!isCollectionLoaded}{...props} />} />\r\n            </div>\r\n        );\r\n\r\n    }\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    loading: selectIsCollectionFetching,\r\n    isCollectionLoaded: selectIscollectionLoaded\r\n});\r\n\r\nconst mapdispatchToProps = dispatch => ({\r\n    fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps, mapdispatchToProps)(ShopPage);"]},"metadata":{},"sourceType":"module"}