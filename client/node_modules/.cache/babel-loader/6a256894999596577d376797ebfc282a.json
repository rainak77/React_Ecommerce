{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport { persistStore } from 'redux-persist';\nimport createSagaMiddleware from 'redux-saga';\nimport logger from 'redux-logger';\nimport rootSaga from './root-saga';\nimport rootReducer from \"./root-reducer\"; // import thunk from 'redux-thunk';\n\nconst sagaMiddleware = createSagaMiddleware();\nconst middlewares = [sagaMiddleware];\n\nif (process.env.NODE_ENV === 'development') {\n  middlewares.push(logger);\n}\n\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares));\nsagaMiddleware.run(rootSaga);\nexport const persistor = persistStore(store);\nexport default {\n  store,\n  persistor\n};","map":{"version":3,"sources":["D:/monsters/crwn-clothing/client/src/redux/store.js"],"names":["createStore","applyMiddleware","persistStore","createSagaMiddleware","logger","rootSaga","rootReducer","sagaMiddleware","middlewares","process","env","NODE_ENV","push","store","run","persistor"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AAEA,SAASC,YAAT,QAA6B,eAA7B;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AAEA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,QAAP,MAAqB,aAArB;AAEA,OAAOC,WAAP,MAAwB,gBAAxB,C,CACA;;AACA,MAAMC,cAAc,GAAGJ,oBAAoB,EAA3C;AAEA,MAAMK,WAAW,GAAI,CAACD,cAAD,CAArB;;AAEA,IAAIE,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA4C;AACxCH,EAAAA,WAAW,CAACI,IAAZ,CAAiBR,MAAjB;AACH;;AAED,OAAO,MAAMS,KAAK,GAAGb,WAAW,CAC5BM,WAD4B,EAE5BL,eAAe,CAAC,GAAGO,WAAJ,CAFa,CAAzB;AAKPD,cAAc,CAACO,GAAf,CAAmBT,QAAnB;AAEA,OAAO,MAAMU,SAAS,GAAGb,YAAY,CAACW,KAAD,CAA9B;AAEP,eAAe;AAAEA,EAAAA,KAAF;AAASE,EAAAA;AAAT,CAAf","sourcesContent":["import { createStore, applyMiddleware } from 'redux';\r\n\r\nimport { persistStore } from 'redux-persist';\r\nimport createSagaMiddleware from 'redux-saga';\r\n\r\nimport logger from 'redux-logger';\r\nimport rootSaga from './root-saga';\r\n\r\nimport rootReducer from \"./root-reducer\";\r\n// import thunk from 'redux-thunk';\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst middlewares =  [sagaMiddleware];\r\n\r\nif (process.env.NODE_ENV === 'development') {\r\n    middlewares.push(logger);\r\n}\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    applyMiddleware(...middlewares)\r\n);\r\n\r\nsagaMiddleware.run(rootSaga);\r\n\r\nexport const persistor = persistStore(store);\r\n\r\nexport default { store, persistor };"]},"metadata":{},"sourceType":"module"}