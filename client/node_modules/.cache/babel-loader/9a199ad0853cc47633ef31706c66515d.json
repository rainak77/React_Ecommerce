{"ast":null,"code":"import{createSelector}from'reselect';var selectCart=function selectCart(state){return state.cart;};export var selectCartItems=createSelector([selectCart],function(cart){return cart.cartItems;});export var selectCartHidden=createSelector([selectCart],function(cart){return cart.hidden;});export var selectCartItemsCount=createSelector([selectCartItems],function(cartItems){return cartItems.reduce(function(accumulatedQuantity,cartItem){return accumulatedQuantity+cartItem.quantity;},0);});export var selecetCartTotal=createSelector([selectCartItems],function(cartItems){return cartItems.reduce(function(accumulatedQuantity,cartItem){return accumulatedQuantity+cartItem.quantity*cartItem.price;},0);});","map":{"version":3,"sources":["D:/monsters/crwn-clothing/client/src/redux/cart/cart.selector.js"],"names":["createSelector","selectCart","state","cart","selectCartItems","cartItems","selectCartHidden","hidden","selectCartItemsCount","reduce","accumulatedQuantity","cartItem","quantity","selecetCartTotal","price"],"mappings":"AAAA,OAASA,cAAT,KAA+B,UAA/B,CAIA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAAAC,KAAK,QAAIA,CAAAA,KAAK,CAACC,IAAV,EAAxB,CAEA,MAAO,IAAMC,CAAAA,eAAe,CAAGJ,cAAc,CACzC,CAACC,UAAD,CADyC,CAEzC,SAACE,IAAD,CAAU,CACN,MAAOA,CAAAA,IAAI,CAACE,SAAZ,CACH,CAJwC,CAAtC,CAQP,MAAO,IAAMC,CAAAA,gBAAgB,CAAGN,cAAc,CAC1C,CAACC,UAAD,CAD0C,CAE1C,SAACE,IAAD,QAAUA,CAAAA,IAAI,CAACI,MAAf,EAF0C,CAAvC,CAKP,MAAO,IAAMC,CAAAA,oBAAoB,CAAGR,cAAc,CAC9C,CAACI,eAAD,CAD8C,CAE9C,SAACC,SAAD,QAAeA,CAAAA,SAAS,CAACI,MAAV,CACX,SAACC,mBAAD,CAAsBC,QAAtB,QACID,CAAAA,mBAAmB,CAAGC,QAAQ,CAACC,QADnC,EADW,CAEkC,CAFlC,CAAf,EAF8C,CAA3C,CAOP,MAAO,IAAMC,CAAAA,gBAAgB,CAAGb,cAAc,CAC1C,CAACI,eAAD,CAD0C,CAE1C,SAACC,SAAD,QAAeA,CAAAA,SAAS,CAACI,MAAV,CACf,SAACC,mBAAD,CAAsBC,QAAtB,QACID,CAAAA,mBAAmB,CAAIC,QAAQ,CAACC,QAAT,CAAoBD,QAAQ,CAACG,KADxD,EADe,CAEiD,CAFjD,CAAf,EAF0C,CAAvC","sourcesContent":["import { createSelector } from 'reselect';\r\n\r\n\r\n\r\nconst selectCart = state => state.cart;\r\n\r\nexport const selectCartItems = createSelector(\r\n    [selectCart],\r\n    (cart) => {\r\n        return cart.cartItems;\r\n    }\r\n);\r\n\r\n\r\nexport const selectCartHidden = createSelector(\r\n    [selectCart],\r\n    (cart) => cart.hidden\r\n);\r\n\r\nexport const selectCartItemsCount = createSelector(\r\n    [selectCartItems],\r\n    (cartItems) => cartItems.reduce(\r\n        (accumulatedQuantity, cartItem) =>\r\n            accumulatedQuantity + cartItem.quantity, 0)\r\n);\r\n\r\nexport const selecetCartTotal = createSelector(\r\n    [selectCartItems],\r\n    (cartItems) => cartItems.reduce(\r\n    (accumulatedQuantity, cartItem) =>\r\n        accumulatedQuantity + (cartItem.quantity * cartItem.price), 0)\r\n);"]},"metadata":{},"sourceType":"module"}