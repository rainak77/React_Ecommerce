{"ast":null,"code":"import { takeEvery } from 'redux-saga/effects';\nimport ShopActionTypes from './shop.type';\nimport { fe } from './shop.action';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nexport function* fetchCollectionAsync() {\n  const collectionRef = firestore.collection('collections');\n  collectionRef.get().then(snapshot => {\n    const collectionsMap = convertCollectionsSnapshotToMap(snapshot); // console.log(collectionsMap);\n\n    dispatch(fetchCollectionsSuccess(collectionsMap));\n  }).catch(error => dispatch(fetchCollectionsFailure(error.message)));\n  yield console.log('i am fired');\n}\nexport function* fetchCollectionsStart() {\n  yield takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionAsync);\n}","map":{"version":3,"sources":["D:/monsters/crwn-clothing/src/redux/shop/shop.sagas.js"],"names":["takeEvery","ShopActionTypes","fe","firestore","convertCollectionsSnapshotToMap","fetchCollectionAsync","collectionRef","collection","get","then","snapshot","collectionsMap","dispatch","fetchCollectionsSuccess","catch","error","fetchCollectionsFailure","message","console","log","fetchCollectionsStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAASA,SAAT,QAA0B,oBAA1B;AACA,OAAOC,eAAP,MAA4B,aAA5B;AACA,SAASC,EAAT,QAAkB,eAAlB;AAGA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AAGA,OAAO,UAAUC,oBAAV,GAAiC;AACpC,QAAMC,aAAa,GAAGH,SAAS,CAACI,UAAV,CAAqB,aAArB,CAAtB;AACAD,EAAAA,aAAa,CAACE,GAAd,GACKC,IADL,CACUC,QAAQ,IAAI;AACd,UAAMC,cAAc,GAAGP,+BAA+B,CAACM,QAAD,CAAtD,CADc,CAEd;;AACAE,IAAAA,QAAQ,CAACC,uBAAuB,CAACF,cAAD,CAAxB,CAAR;AACH,GALL,EAMKG,KANL,CAMWC,KAAK,IAAIH,QAAQ,CAACI,uBAAuB,CAACD,KAAK,CAACE,OAAP,CAAxB,CAN5B;AAOA,QAAMC,OAAO,CAACC,GAAR,CAAY,YAAZ,CAAN;AACH;AAED,OAAO,UAAUC,qBAAV,GAAkC;AACrC,QAAMpB,SAAS,CACXC,eAAe,CAACoB,uBADL,EAEXhB,oBAFW,CAAf;AAIH","sourcesContent":["import { takeEvery } from 'redux-saga/effects';\r\nimport ShopActionTypes from './shop.type';\r\nimport { fe} from './shop.action';\r\n\r\n\r\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\r\n\r\n\r\nexport function* fetchCollectionAsync() {\r\n    const collectionRef = firestore.collection('collections');\r\n    collectionRef.get()\r\n        .then(snapshot => {\r\n            const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\r\n            // console.log(collectionsMap);\r\n            dispatch(fetchCollectionsSuccess(collectionsMap));\r\n        })\r\n        .catch(error => dispatch(fetchCollectionsFailure(error.message)));\r\n    yield console.log('i am fired');\r\n}\r\n\r\nexport function* fetchCollectionsStart() {\r\n    yield takeEvery(\r\n        ShopActionTypes.FETCH_COLLECTIONS_START,\r\n        fetchCollectionAsync\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}