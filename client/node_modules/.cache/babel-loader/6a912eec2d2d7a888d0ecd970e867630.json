{"ast":null,"code":"var _jsxFileName = \"D:\\\\monsters\\\\crwn-clothing\\\\src\\\\components\\\\sign-in\\\\sign-in.component.jsx\";\nimport React, { useState } from 'react';\nimport './sign-in.styles.scss';\nimport { connect } from 'react-redux';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component'; // import { auth, signInWithGoogle } from '../../firebase/firebase.utils';\n\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/user.action';\n\nconst SignIn = ({\n  emailSignInStart,\n  googleSignInStart\n}) => {\n  const [userCredential, setCredential] = useState({\n    email: '',\n    password: ''\n  }); // constructor(props) {\n  //     super(props);\n  //     this.state = {\n  //         email: '',\n  //         password: ''\n  //     };\n  // }\n\n  const {\n    email,\n    password\n  } = userCredential;\n\n  const handleSubmit = async event => {\n    event.preventDefault(); // const { email, password } = this.state;\n\n    emailSignInStart(email, password); // const { emailSignInStart } = this.props;\n    // try {\n    //     await auth.signInWithEmailAndPassword(email, password);\n    //     this.setState({ email: '', password: '' });\n    // }\n    // catch (error) {\n    //     console.log(error);\n    // }\n  };\n\n  const handleChange = event => {\n    const {\n      value,\n      name\n    } = event.target;\n    setCredential({ ...userCredential,\n      [name]: value\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sign-in\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, \"I already have an account\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, \"Sign in with your email and password\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    name: \"email\",\n    type: \"email\",\n    value: this.state.email,\n    handlechange: handleChange,\n    label: \"email\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    name: \"password\",\n    type: \"password\",\n    label: \"password\",\n    value: this.state.password,\n    handlechange: this.handleChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CustomButton, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 21\n    }\n  }, \" Sign In \"), /*#__PURE__*/React.createElement(CustomButton, {\n    type: \"button\",\n    onClick: googleSignInStart,\n    isGoogleSignIn: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 21\n    }\n  }, \" Google (Sign In)\"))));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) => dispatch(emailSignInStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["D:/monsters/crwn-clothing/src/components/sign-in/sign-in.component.jsx"],"names":["React","useState","connect","FormInput","CustomButton","googleSignInStart","emailSignInStart","SignIn","userCredential","setCredential","email","password","handleSubmit","event","preventDefault","handleChange","value","name","target","state","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport './sign-in.styles.scss';\r\nimport { connect } from 'react-redux';\r\nimport FormInput from '../form-input/form-input.component';\r\nimport CustomButton from '../custom-button/custom-button.component';\r\n// import { auth, signInWithGoogle } from '../../firebase/firebase.utils';\r\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/user.action';\r\n\r\nconst SignIn = ({ emailSignInStart, googleSignInStart }) => {\r\n\r\n    const [userCredential, setCredential] = useState({ email: '', password: '' });\r\n    // constructor(props) {\r\n    //     super(props);\r\n    //     this.state = {\r\n    //         email: '',\r\n    //         password: ''\r\n    //     };\r\n    // }\r\n\r\n    const { email, password } = userCredential;\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n\r\n        // const { email, password } = this.state;\r\n        emailSignInStart(email, password);\r\n\r\n        // const { emailSignInStart } = this.props;\r\n\r\n        // try {\r\n        //     await auth.signInWithEmailAndPassword(email, password);\r\n        //     this.setState({ email: '', password: '' });\r\n\r\n        // }\r\n        // catch (error) {\r\n        //     console.log(error);\r\n        // }\r\n    };\r\n\r\n    const handleChange = (event) => {\r\n\r\n        const { value, name } = event.target;\r\n        setCredential({ ...userCredential, [name]: value });\r\n\r\n    };\r\n\r\n    return (\r\n        <div className='sign-in'>\r\n            <h2 className='title'>I already have an account</h2>\r\n            <span>Sign in with your email and password</span>\r\n\r\n            <form onSubmit={handleSubmit}>\r\n\r\n                <FormInput name='email' type='email' value={this.state.email}\r\n                    handlechange={handleChange}\r\n                    label='email'\r\n                    required />\r\n\r\n                <FormInput\r\n                    name='password'\r\n                    type='password'\r\n                    label='password'\r\n                    value={this.state.password}\r\n                    handlechange={this.handleChange}\r\n                    required />\r\n\r\n                <div className='buttons' >\r\n                    <CustomButton type='submit'> Sign In </CustomButton>\r\n                    <CustomButton type='button' onClick={googleSignInStart} isGoogleSignIn > Google (Sign In)</CustomButton>\r\n                </div>\r\n\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    googleSignInStart: () => dispatch(googleSignInStart()),\r\n    emailSignInStart: (email, password) => dispatch(emailSignInStart({ email, password }))\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(SignIn);"]},"metadata":{},"sourceType":"module"}