{"ast":null,"code":"var _jsxFileName = \"D:\\\\monsters\\\\crwn-clothing\\\\src\\\\pages\\\\shop\\\\shop.component.jsx\";\nimport React from 'react';\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\nimport { Route } from 'react-router-dom';\nimport CollectionPage from '../collection/collection.component';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { connect } from 'react-redux';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\nconst CollectionOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true\n    };\n    this.unsubscribeFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    const {\n      updateCollections\n    } = this.props;\n    const collectionRef = firestore.collection('collections');\n    this.unsubscribeFromSnapshot = collectionRef.onSnapshot(async snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      updateCollections(collectionsMap);\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  render() {\n    const {\n      match\n    } = this.props;\n    const {\n      loading\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"shop-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      render: props => /*#__PURE__*/React.createElement(CollectionOverviewWithSpinner, Object.assign({\n        isLoading: loading\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 40\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      render: props => /*#__PURE__*/React.createElement(CollectionWithSpinner, Object.assign({\n        isLoading: loading\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 40\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nconst mapdispatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n});\n\nexport default connect(null, mapdispatchToProps)(ShopPage);","map":{"version":3,"sources":["D:/monsters/crwn-clothing/src/pages/shop/shop.component.jsx"],"names":["React","CollectionsOverview","Route","CollectionPage","firestore","convertCollectionsSnapshotToMap","connect","WithSpinner","CollectionOverviewWithSpinner","CollectionWithSpinner","ShopPage","Component","state","loading","unsubscribeFromSnapshot","componentDidMount","updateCollections","props","collectionRef","collection","onSnapshot","snapshot","collectionsMap","setState","render","match","path","mapdispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,mBAAP,MAAgC,sEAAhC;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,WAAP,MAAwB,sDAAxB;AAEA,MAAMC,6BAA6B,GAAGD,WAAW,CAACN,mBAAD,CAAjD;AACA,MAAMQ,qBAAqB,GAAGF,WAAW,CAACJ,cAAD,CAAzC;;AAEA,MAAMO,QAAN,SAAuBV,KAAK,CAACW,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACnCC,KADmC,GAC3B;AACJC,MAAAA,OAAO,EAAE;AADL,KAD2B;AAAA,SAInCC,uBAJmC,GAIT,IAJS;AAAA;;AAOnCC,EAAAA,iBAAiB,GAAG;AAChB,UAAM;AAAEC,MAAAA;AAAF,QAAwB,KAAKC,KAAnC;AACA,UAAMC,aAAa,GAAGd,SAAS,CAACe,UAAV,CAAqB,aAArB,CAAtB;AAEJ,SAAKL,uBAAL,GAA+BI,aAAa,CAACE,UAAd,CAAyB,MAAMC,QAAN,IAAkB;AAClE,YAAMC,cAAc,GAAGjB,+BAA+B,CAACgB,QAAD,CAAtD;AACAL,MAAAA,iBAAiB,CAACM,cAAD,CAAjB;AACA,WAAKC,QAAL,CAAc;AAAEV,QAAAA,OAAO,EAAE;AAAX,OAAd;AACH,KAJ0B,CAA/B;AAKC;;AACDW,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKR,KAAvB;AACA,UAAM;AAAEJ,MAAAA;AAAF,QAAc,KAAKD,KAAzB;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AACI,MAAA,IAAI,EAAG,GAAEa,KAAK,CAACC,IAAK,EADxB;AAEI,MAAA,MAAM,EAAGT,KAAD,iBAAW,oBAAC,6BAAD;AAA+B,QAAA,SAAS,EAAEJ;AAA1C,SAAsDI,KAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAII,oBAAC,KAAD;AACI,MAAA,IAAI,EAAG,GAAEQ,KAAK,CAACC,IAAK,gBADxB;AAEI,MAAA,MAAM,EAAGT,KAAD,iBAAW,oBAAC,qBAAD;AAAuB,QAAA,SAAS,EAAEJ;AAAlC,SAA8CI,KAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,CADJ;AAWH;;AA/BkC;;AAiCvC,MAAMU,kBAAkB,GAAGC,QAAQ,KAAK;AACpCZ,EAAAA,iBAAiB,EAAEM,cAAc,IAAIM,QAAQ,CAACZ,iBAAiB,CAACM,cAAD,CAAlB;AADT,CAAL,CAAnC;;AAGA,eAAehB,OAAO,CAAC,IAAD,EAAOqB,kBAAP,CAAP,CAAkCjB,QAAlC,CAAf","sourcesContent":["import React from 'react';\r\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\r\nimport { Route } from 'react-router-dom';\r\nimport CollectionPage from '../collection/collection.component';\r\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\r\nimport { connect } from 'react-redux';\r\n\r\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\r\n\r\nconst CollectionOverviewWithSpinner = WithSpinner(CollectionsOverview);\r\nconst CollectionWithSpinner = WithSpinner(CollectionPage);\r\n\r\nclass ShopPage extends React.Component {\r\n    state = {\r\n        loading: true\r\n    };\r\n    unsubscribeFromSnapshot = null;\r\n\r\n\r\n    componentDidMount() {\r\n        const { updateCollections } = this.props;\r\n        const collectionRef = firestore.collection('collections');\r\n\r\n    this.unsubscribeFromSnapshot = collectionRef.onSnapshot(async snapshot => {\r\n            const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\r\n            updateCollections(collectionsMap);\r\n            this.setState({ loading: false });\r\n        });\r\n    }\r\n    render() {\r\n        const { match } = this.props;\r\n        const { loading } = this.state;\r\n        return (\r\n            <div className='shop-page'>\r\n                <Route exact\r\n                    path={`${match.path}`}\r\n                    render={(props) => <CollectionOverviewWithSpinner isLoading={loading}{...props} />} />\r\n                <Route\r\n                    path={`${match.path}/:collectionId`}\r\n                    render={(props) => <CollectionWithSpinner isLoading={loading}{...props} />} />\r\n            </div>\r\n        );\r\n\r\n    }\r\n}\r\nconst mapdispatchToProps = dispatch => ({\r\n    updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\r\n});\r\nexport default connect(null, mapdispatchToProps)(ShopPage);"]},"metadata":{},"sourceType":"module"}