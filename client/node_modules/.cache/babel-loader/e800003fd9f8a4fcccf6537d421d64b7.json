{"ast":null,"code":"import _defineProperty from\"D:\\\\monsters\\\\crwn-clothing\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _objectSpread from\"D:\\\\monsters\\\\crwn-clothing\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _regeneratorRuntime from\"D:\\\\monsters\\\\crwn-clothing\\\\client\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"D:\\\\monsters\\\\crwn-clothing\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"D:\\\\monsters\\\\crwn-clothing\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import'./sign-in.styles.scss';import{connect}from'react-redux';import FormInput from'../form-input/form-input.component';import CustomButton from'../custom-button/custom-button.component';// import { auth, signInWithGoogle } from '../../firebase/firebase.utils';\nimport{googleSignInStart as _googleSignInStart,emailSignInStart as _emailSignInStart}from'../../redux/user/user.action';var SignIn=function SignIn(_ref){var emailSignInStart=_ref.emailSignInStart,googleSignInStart=_ref.googleSignInStart;var _useState=useState({email:'',password:''}),_useState2=_slicedToArray(_useState,2),userCredential=_useState2[0],setCredential=_useState2[1];// constructor(props) {\n//     super(props);\n//     this.state = {\n//         email: '',\n//         password: ''\n//     };\n// }\nvar email=userCredential.email,password=userCredential.password;var handleSubmit=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(event){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:event.preventDefault();// const { email, password } = this.state;\nemailSignInStart(email,password);// const { emailSignInStart } = this.props;\n// try {\n//     await auth.signInWithEmailAndPassword(email, password);\n//     this.setState({ email: '', password: '' });\n// }\n// catch (error) {\n//     console.log(error);\n// }\ncase 2:case\"end\":return _context.stop();}}},_callee);}));return function handleSubmit(_x){return _ref2.apply(this,arguments);};}();var handleChange=function handleChange(event){var _event$target=event.target,value=_event$target.value,name=_event$target.name;setCredential(_objectSpread({},userCredential,_defineProperty({},name,value)));};return/*#__PURE__*/React.createElement(\"div\",{className:\"sign-in\"},/*#__PURE__*/React.createElement(\"h2\",{className:\"title\"},\"I already have an account\"),/*#__PURE__*/React.createElement(\"span\",null,\"Sign in with your email and password\"),/*#__PURE__*/React.createElement(\"form\",{onSubmit:handleSubmit},/*#__PURE__*/React.createElement(FormInput,{name:\"email\",type:\"email\",value:email,handlechange:handleChange,label:\"email\",required:true}),/*#__PURE__*/React.createElement(FormInput,{name:\"password\",type:\"password\",label:\"password\",value:password,handlechange:handleChange,required:true}),/*#__PURE__*/React.createElement(\"div\",{className:\"buttons\"},/*#__PURE__*/React.createElement(CustomButton,{type:\"submit\"},\" Sign In \"),/*#__PURE__*/React.createElement(CustomButton,{type:\"button\",onClick:googleSignInStart,isGoogleSignIn:true},\" Google (Sign In)\"))));};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{googleSignInStart:function googleSignInStart(){return dispatch(_googleSignInStart());},emailSignInStart:function emailSignInStart(email,password){return dispatch(_emailSignInStart({email:email,password:password}));}};};export default connect(null,mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["D:/monsters/crwn-clothing/client/src/components/sign-in/sign-in.component.jsx"],"names":["React","useState","connect","FormInput","CustomButton","googleSignInStart","emailSignInStart","SignIn","email","password","userCredential","setCredential","handleSubmit","event","preventDefault","handleChange","target","value","name","mapDispatchToProps","dispatch"],"mappings":"2lBAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,MAAO,uBAAP,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,MAAOC,CAAAA,SAAP,KAAsB,oCAAtB,CACA,MAAOC,CAAAA,YAAP,KAAyB,0CAAzB,CACA;AACA,OAASC,iBAAiB,GAAjBA,CAAAA,kBAAT,CAA4BC,gBAAgB,GAAhBA,CAAAA,iBAA5B,KAAoD,8BAApD,CAEA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,MAA6C,IAA1CD,CAAAA,gBAA0C,MAA1CA,gBAA0C,CAAxBD,iBAAwB,MAAxBA,iBAAwB,eAEhBJ,QAAQ,CAAC,CAAEO,KAAK,CAAE,EAAT,CAAaC,QAAQ,CAAE,EAAvB,CAAD,CAFQ,wCAEjDC,cAFiD,eAEjCC,aAFiC,eAGxD;AACA;AACA;AACA;AACA;AACA;AACA;AATwD,GAWhDH,CAAAA,KAXgD,CAW5BE,cAX4B,CAWhDF,KAXgD,CAWzCC,QAXyC,CAW5BC,cAX4B,CAWzCD,QAXyC,CAaxD,GAAMG,CAAAA,YAAY,2FAAG,iBAAOC,KAAP,kHACjBA,KAAK,CAACC,cAAN,GAEA;AACAR,gBAAgB,CAACE,KAAD,CAAQC,QAAR,CAAhB,CAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAfiB,sDAAH,kBAAZG,CAAAA,YAAY,6CAAlB,CAkBA,GAAMG,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACF,KAAD,CAAW,mBAEJA,KAAK,CAACG,MAFF,CAEpBC,KAFoB,eAEpBA,KAFoB,CAEbC,IAFa,eAEbA,IAFa,CAG5BP,aAAa,kBAAMD,cAAN,oBAAuBQ,IAAvB,CAA8BD,KAA9B,GAAb,CAEH,CALD,CAOA,mBACI,2BAAK,SAAS,CAAC,SAAf,eACI,0BAAI,SAAS,CAAC,OAAd,8BADJ,cAEI,uEAFJ,cAII,4BAAM,QAAQ,CAAEL,YAAhB,eAEI,oBAAC,SAAD,EAAW,IAAI,CAAC,OAAhB,CAAwB,IAAI,CAAC,OAA7B,CACI,KAAK,CAAEJ,KADX,CAEI,YAAY,CAAEO,YAFlB,CAGI,KAAK,CAAC,OAHV,CAII,QAAQ,KAJZ,EAFJ,cAQI,oBAAC,SAAD,EACI,IAAI,CAAC,UADT,CAEI,IAAI,CAAC,UAFT,CAGI,KAAK,CAAC,UAHV,CAII,KAAK,CAAEN,QAJX,CAKI,YAAY,CAAEM,YALlB,CAMI,QAAQ,KANZ,EARJ,cAgBI,2BAAK,SAAS,CAAC,SAAf,eACI,oBAAC,YAAD,EAAc,IAAI,CAAC,QAAnB,cADJ,cAEI,oBAAC,YAAD,EAAc,IAAI,CAAC,QAAnB,CAA4B,OAAO,CAAEV,iBAArC,CAAwD,cAAc,KAAtE,sBAFJ,CAhBJ,CAJJ,CADJ,CA6BH,CAnED,CAqEA,GAAMc,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAAAC,QAAQ,QAAK,CACpCf,iBAAiB,CAAE,mCAAMe,CAAAA,QAAQ,CAACf,kBAAiB,EAAlB,CAAd,EADiB,CAEpCC,gBAAgB,CAAE,0BAACE,KAAD,CAAQC,QAAR,QAAqBW,CAAAA,QAAQ,CAACd,iBAAgB,CAAC,CAAEE,KAAK,CAALA,KAAF,CAASC,QAAQ,CAARA,QAAT,CAAD,CAAjB,CAA7B,EAFkB,CAAL,EAAnC,CAKA,cAAeP,CAAAA,OAAO,CAAC,IAAD,CAAOiB,kBAAP,CAAP,CAAkCZ,MAAlC,CAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport './sign-in.styles.scss';\r\nimport { connect } from 'react-redux';\r\nimport FormInput from '../form-input/form-input.component';\r\nimport CustomButton from '../custom-button/custom-button.component';\r\n// import { auth, signInWithGoogle } from '../../firebase/firebase.utils';\r\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/user.action';\r\n\r\nconst SignIn = ({ emailSignInStart, googleSignInStart }) => {\r\n\r\n    const [userCredential, setCredential] = useState({ email: '', password: '' });\r\n    // constructor(props) {\r\n    //     super(props);\r\n    //     this.state = {\r\n    //         email: '',\r\n    //         password: ''\r\n    //     };\r\n    // }\r\n\r\n    const { email, password } = userCredential;\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n\r\n        // const { email, password } = this.state;\r\n        emailSignInStart(email, password);\r\n\r\n        // const { emailSignInStart } = this.props;\r\n\r\n        // try {\r\n        //     await auth.signInWithEmailAndPassword(email, password);\r\n        //     this.setState({ email: '', password: '' });\r\n\r\n        // }\r\n        // catch (error) {\r\n        //     console.log(error);\r\n        // }\r\n    };\r\n\r\n    const handleChange = (event) => {\r\n\r\n        const { value, name } = event.target;\r\n        setCredential({ ...userCredential, [name]: value });\r\n\r\n    };\r\n\r\n    return (\r\n        <div className='sign-in'>\r\n            <h2 className='title'>I already have an account</h2>\r\n            <span>Sign in with your email and password</span>\r\n\r\n            <form onSubmit={handleSubmit}>\r\n\r\n                <FormInput name='email' type='email'\r\n                    value={email}\r\n                    handlechange={handleChange}\r\n                    label='email'\r\n                    required />\r\n\r\n                <FormInput\r\n                    name='password'\r\n                    type='password'\r\n                    label='password'\r\n                    value={password}\r\n                    handlechange={handleChange}\r\n                    required />\r\n\r\n                <div className='buttons' >\r\n                    <CustomButton type='submit'> Sign In </CustomButton>\r\n                    <CustomButton type='button' onClick={googleSignInStart} isGoogleSignIn > Google (Sign In)</CustomButton>\r\n                </div>\r\n\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    googleSignInStart: () => dispatch(googleSignInStart()),\r\n    emailSignInStart: (email, password) => dispatch(emailSignInStart({ email, password }))\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(SignIn);"]},"metadata":{},"sourceType":"module"}