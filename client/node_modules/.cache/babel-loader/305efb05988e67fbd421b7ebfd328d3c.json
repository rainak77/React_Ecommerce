{"ast":null,"code":"import { takeEvery, call } from 'redux-saga/effects';\nimport ShopActionTypes from './shop.type';\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from './shop.action';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nexport function* fetchCollectionAsync() {\n  const collectionRef = firestore.collection('collections');\n  const snapshot = yield collectionRef.get();\n  const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot); // collectionRef.get()\n  //     .then(snapshot => {\n  //         const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n  //         // console.log(collectionsMap);\n  //         dispatch(fetchCollectionsSuccess(collectionsMap));\n  //     })\n  //     .catch(error => dispatch(fetchCollectionsFailure(error.message)));\n  // yield console.log('i am fired');\n}\nexport function* fetchCollectionsStart() {\n  yield takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionAsync);\n}","map":{"version":3,"sources":["D:/monsters/crwn-clothing/src/redux/shop/shop.sagas.js"],"names":["takeEvery","call","ShopActionTypes","fetchCollectionsSuccess","fetchCollectionsFailure","firestore","convertCollectionsSnapshotToMap","fetchCollectionAsync","collectionRef","collection","snapshot","get","collectionsMap","fetchCollectionsStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,IAApB,QAAgC,oBAAhC;AACA,OAAOC,eAAP,MAA4B,aAA5B;AACA,SACIC,uBADJ,EAEIC,uBAFJ,QAGO,eAHP;AAMA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AAGA,OAAO,UAAUC,oBAAV,GAAiC;AACpC,QAAMC,aAAa,GAAGH,SAAS,CAACI,UAAV,CAAqB,aAArB,CAAtB;AACA,QAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,QAAMC,cAAc,GAAG,MAAMX,IAAI,CAACK,+BAAD,EAAkCI,QAAlC,CAAjC,CAHoC,CAOpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH;AAED,OAAO,UAAUG,qBAAV,GAAkC;AACrC,QAAMb,SAAS,CACXE,eAAe,CAACY,uBADL,EAEXP,oBAFW,CAAf;AAIH","sourcesContent":["import { takeEvery, call } from 'redux-saga/effects';\r\nimport ShopActionTypes from './shop.type';\r\nimport {\r\n    fetchCollectionsSuccess,\r\n    fetchCollectionsFailure\r\n} from './shop.action';\r\n\r\n\r\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\r\n\r\n\r\nexport function* fetchCollectionAsync() {\r\n    const collectionRef = firestore.collection('collections');\r\n    const snapshot = yield collectionRef.get();\r\n    const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);\r\n\r\n\r\n\r\n    // collectionRef.get()\r\n    //     .then(snapshot => {\r\n    //         const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\r\n    //         // console.log(collectionsMap);\r\n    //         dispatch(fetchCollectionsSuccess(collectionsMap));\r\n    //     })\r\n    //     .catch(error => dispatch(fetchCollectionsFailure(error.message)));\r\n    // yield console.log('i am fired');\r\n}\r\n\r\nexport function* fetchCollectionsStart() {\r\n    yield takeEvery(\r\n        ShopActionTypes.FETCH_COLLECTIONS_START,\r\n        fetchCollectionAsync\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}