{"ast":null,"code":"import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport UserActionTypes from \"../user/user.types\";\nimport { auth, googleProvider, createUserProfileDocument } from '../../firebase/firebase.utils';\nimport { SignInSuccess, googleSignInFailure, emailSignInSuccess, emailSignInFailure } from './user.action';\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(googleSignInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(googleSignInFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(emailSignInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(emailSignInFailure(error));\n  }\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart)]);\n}","map":{"version":3,"sources":["D:/monsters/crwn-clothing/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","UserActionTypes","auth","googleProvider","createUserProfileDocument","SignInSuccess","googleSignInFailure","emailSignInSuccess","emailSignInFailure","signInWithGoogle","user","signInWithPopup","userRef","userSnapshot","get","googleSignInSuccess","id","data","error","onGoogleSignInStart","GOOGLE_SIGN_IN_START","signInWithEmail","payload","email","password","signInWithEmailAndPassword","onEmailSignInStart","EMAIL_SIGN_IN_START","userSagas"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,GAA1B,EAA+BC,IAA/B,QAA2C,oBAA3C;AAEA,OAAOC,eAAP,MAA4B,oBAA5B;AACA,SACIC,IADJ,EAEIC,cAFJ,EAGIC,yBAHJ,QAIO,+BAJP;AAKA,SAASC,aAAT,EAAwBC,mBAAxB,EAA6CC,kBAA7C,EAAiEC,kBAAjE,QAA2F,eAA3F;AAGA,OAAO,UAAUC,gBAAV,GAA6B;AAChC,MAAI;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMR,IAAI,CAACS,eAAL,CAAqBR,cAArB,CAAvB;AACA,UAAMS,OAAO,GAAG,MAAMZ,IAAI,CAACI,yBAAD,EAA4BM,IAA5B,CAA1B;AACA,UAAMG,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMhB,GAAG,CAACiB,mBAAmB,CAAC;AAAEC,MAAAA,EAAE,EAAEH,YAAY,CAACG,EAAnB;AAAuB,SAAGH,YAAY,CAACI,IAAb;AAA1B,KAAD,CAApB,CAAT;AACH,GALD,CAMA,OAAOC,KAAP,EAAc;AACV,UAAMpB,GAAG,CAACQ,mBAAmB,CAACY,KAAD,CAApB,CAAT;AACH;AACJ;AACD,OAAO,UAAUC,mBAAV,GAAgC;AACnC,QAAMtB,UAAU,CAACI,eAAe,CAACmB,oBAAjB,EAAuCX,gBAAvC,CAAhB;AACH;AAID,OAAO,UAAUY,eAAV,CAA0B;AAAEC,EAAAA,OAAO,EAAE;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT;AAAX,CAA1B,EAA4D;AAC/D,MAAI;AACA,UAAM;AAAEd,MAAAA;AAAF,QAAW,MAAMR,IAAI,CAACuB,0BAAL,CAAgCF,KAAhC,EAAuCC,QAAvC,CAAvB;AACA,UAAMZ,OAAO,GAAG,MAAMZ,IAAI,CAACI,yBAAD,EAA4BM,IAA5B,CAA1B;AACA,UAAMG,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMhB,GAAG,CAACS,kBAAkB,CAAC;AAAES,MAAAA,EAAE,EAAEH,YAAY,CAACG,EAAnB;AAAuB,SAAGH,YAAY,CAACI,IAAb;AAA1B,KAAD,CAAnB,CAAT;AACH,GALD,CAMA,OAAOC,KAAP,EAAc;AACV,UAAMpB,GAAG,CAACU,kBAAkB,CAACU,KAAD,CAAnB,CAAT;AACH;AACJ;AACD,OAAO,UAAUQ,kBAAV,GAA+B;AAClC,QAAM7B,UAAU,CAACI,eAAe,CAAC0B,mBAAjB,EAAsCN,eAAtC,CAAhB;AACH;AAKD,OAAO,UAAUO,SAAV,GAAsB;AACzB,QAAM7B,GAAG,CAAC,CAACC,IAAI,CAACmB,mBAAD,CAAL,EAA4BnB,IAAI,CAAC0B,kBAAD,CAAhC,CAAD,CAAT;AACH","sourcesContent":["import { takeLatest, put, all, call } from 'redux-saga/effects';\r\n\r\nimport UserActionTypes from \"../user/user.types\";\r\nimport {\r\n    auth,\r\n    googleProvider,\r\n    createUserProfileDocument\r\n} from '../../firebase/firebase.utils';\r\nimport { SignInSuccess, googleSignInFailure, emailSignInSuccess, emailSignInFailure } from './user.action';\r\n\r\n\r\nexport function* signInWithGoogle() {\r\n    try {\r\n        const { user } = yield auth.signInWithPopup(googleProvider);\r\n        const userRef = yield call(createUserProfileDocument, user);\r\n        const userSnapshot = yield userRef.get();\r\n        yield put(googleSignInSuccess({ id: userSnapshot.id, ...userSnapshot.data() }));\r\n    }\r\n    catch (error) {\r\n        yield put(googleSignInFailure(error));\r\n    }\r\n}\r\nexport function* onGoogleSignInStart() {\r\n    yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\r\n}\r\n\r\n\r\n\r\nexport function* signInWithEmail({ payload: { email, password } }) {\r\n    try {\r\n        const { user } = yield auth.signInWithEmailAndPassword(email, password);\r\n        const userRef = yield call(createUserProfileDocument, user);\r\n        const userSnapshot = yield userRef.get();\r\n        yield put(emailSignInSuccess({ id: userSnapshot.id, ...userSnapshot.data() }));\r\n    }\r\n    catch (error) {\r\n        yield put(emailSignInFailure(error));\r\n    }\r\n}\r\nexport function* onEmailSignInStart() {\r\n    yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\r\n}\r\n\r\n\r\n\r\n\r\nexport function* userSagas() {\r\n    yield all([call(onGoogleSignInStart), call(onEmailSignInStart)]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}