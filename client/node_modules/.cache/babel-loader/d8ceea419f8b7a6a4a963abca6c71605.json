{"ast":null,"code":"import { createSelector } from 'reselect';\nimport memoize from 'lodash.memoize';\n\nconst selectShop = state => state.shop; //bringing shop data as it is 'as an object'\n\n\nexport const selectCollections = createSelector([selectShop], shop => shop.collections); // Transform shop data into an array\n\nexport const selectCollectionforPreview = createSelector([selectCollections], collections => collections ? Object.keys(collections).map(key => collections[key]) : []); //Selecting user data using Specific url-Parameter\n\nexport const selectCollection = memoize(collectionUrlParam => createSelector([selectCollections], collections => collections ? collections[collectionUrlParam] : null));\nexport const seclectIscollectionFetching = createSelector([sel]);","map":{"version":3,"sources":["D:/monsters/crwn-clothing/src/redux/shop/shop.selector.js"],"names":["createSelector","memoize","selectShop","state","shop","selectCollections","collections","selectCollectionforPreview","Object","keys","map","key","selectCollection","collectionUrlParam","seclectIscollectionFetching","sel"],"mappings":"AAAA,SAASA,cAAT,QAA+B,UAA/B;AACA,OAAOC,OAAP,MAAoB,gBAApB;;AAGA,MAAMC,UAAU,GAAGC,KAAK,IAAIA,KAAK,CAACC,IAAlC,C,CAEA;;;AACA,OAAO,MAAMC,iBAAiB,GAAGL,cAAc,CAC3C,CAACE,UAAD,CAD2C,EAE3CE,IAAI,IAAIA,IAAI,CAACE,WAF8B,CAAxC,C,CAMP;;AACA,OAAO,MAAMC,0BAA0B,GAAGP,cAAc,CACpD,CAACK,iBAAD,CADoD,EAEpDC,WAAW,IAAIA,WAAW,GACpBE,MAAM,CAACC,IAAP,CAAYH,WAAZ,EAAyBI,GAAzB,CAA6BC,GAAG,IAAIL,WAAW,CAACK,GAAD,CAA/C,CADoB,GACoC,EAHV,CAAjD,C,CAQP;;AACA,OAAO,MAAMC,gBAAgB,GAAGX,OAAO,CAAEY,kBAAD,IACpCb,cAAc,CACV,CAACK,iBAAD,CADU,EAEVC,WAAW,IAAIA,WAAW,GAAGA,WAAW,CAACO,kBAAD,CAAd,GAAqC,IAFrD,CADqB,CAAhC;AAQP,OAAO,MAAMC,2BAA2B,GAAGd,cAAc,CACrD,CAACe,GAAD,CADqD,CAAlD","sourcesContent":["import { createSelector } from 'reselect';\r\nimport memoize from 'lodash.memoize';\r\n\r\n\r\nconst selectShop = state => state.shop;\r\n\r\n//bringing shop data as it is 'as an object'\r\nexport const selectCollections = createSelector(\r\n    [selectShop],\r\n    shop => shop.collections\r\n);\r\n\r\n\r\n// Transform shop data into an array\r\nexport const selectCollectionforPreview = createSelector(\r\n    [selectCollections],\r\n    collections => collections\r\n        ? Object.keys(collections).map(key => collections[key]) : []\r\n\r\n);\r\n\r\n\r\n//Selecting user data using Specific url-Parameter\r\nexport const selectCollection = memoize((collectionUrlParam) =>\r\n    createSelector(\r\n        [selectCollections],\r\n        collections => collections ? collections[collectionUrlParam] : null\r\n    )\r\n);\r\n\r\n\r\nexport const seclectIscollectionFetching = createSelector(\r\n    [sel]\r\n);"]},"metadata":{},"sourceType":"module"}