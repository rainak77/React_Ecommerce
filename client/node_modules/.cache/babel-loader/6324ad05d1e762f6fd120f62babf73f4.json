{"ast":null,"code":"import React from'react';import'./checkout-styles.scss';import{clearItemFromCart,addItem as _addItem,removeItem as _removeItem}from'../../redux/cart/cart.actions';import{connect}from'react-redux';var CheckoutItem=function CheckoutItem(_ref){var cartItem=_ref.cartItem,clearItem=_ref.clearItem,addItem=_ref.addItem,removeItem=_ref.removeItem;var name=cartItem.name,imageUrl=cartItem.imageUrl,price=cartItem.price,quantity=cartItem.quantity;return/*#__PURE__*/React.createElement(\"div\",{className:\"checkout-item\"},/*#__PURE__*/React.createElement(\"div\",{className:\"image-container\"},/*#__PURE__*/React.createElement(\"img\",{src:imageUrl,alt:\"item\"})),/*#__PURE__*/React.createElement(\"span\",{className:\"name\"},name),/*#__PURE__*/React.createElement(\"span\",{className:\"quantity\"},/*#__PURE__*/React.createElement(\"div\",{className:\"arrow\",onClick:function onClick(){return removeItem(cartItem);}},\"\\u276E\"),/*#__PURE__*/React.createElement(\"span\",{className:\"value\"},quantity),/*#__PURE__*/React.createElement(\"div\",{className:\"arrow\",onClick:function onClick(){return addItem(cartItem);}},\"\\u276F\")),/*#__PURE__*/React.createElement(\"span\",{className:\"price\"},price),/*#__PURE__*/React.createElement(\"div\",{onClick:function onClick(){return clearItem(cartItem);},className:\"remove-button\"},\"\\u2715\"));};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{clearItem:function clearItem(item){return dispatch(clearItemFromCart(item));},addItem:function addItem(item){return dispatch(_addItem(item));},removeItem:function removeItem(item){return dispatch(_removeItem(item));}};};export default connect(null,mapDispatchToProps)(CheckoutItem);","map":{"version":3,"sources":["D:/monsters/crwn-clothing/client/src/components/checkout-item/checkout-item.component.jsx"],"names":["React","clearItemFromCart","addItem","removeItem","connect","CheckoutItem","cartItem","clearItem","name","imageUrl","price","quantity","mapDispatchToProps","dispatch","item"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAO,wBAAP,CACA,OAASC,iBAAT,CAA4BC,OAAO,GAAPA,CAAAA,QAA5B,CAAqCC,UAAU,GAAVA,CAAAA,WAArC,KAAuD,+BAAvD,CACA,OAASC,OAAT,KAAwB,aAAxB,CAEA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,MAAkD,IAA/CC,CAAAA,QAA+C,MAA/CA,QAA+C,CAArCC,SAAqC,MAArCA,SAAqC,CAA1BL,OAA0B,MAA1BA,OAA0B,CAAjBC,UAAiB,MAAjBA,UAAiB,IAC3DK,CAAAA,IAD2D,CACvBF,QADuB,CAC3DE,IAD2D,CACrDC,QADqD,CACvBH,QADuB,CACrDG,QADqD,CAC3CC,KAD2C,CACvBJ,QADuB,CAC3CI,KAD2C,CACpCC,QADoC,CACvBL,QADuB,CACpCK,QADoC,CAEnE,mBACI,2BAAK,SAAS,CAAC,eAAf,eACI,2BAAK,SAAS,CAAC,iBAAf,eACI,2BAAK,GAAG,CAAEF,QAAV,CAAoB,GAAG,CAAC,MAAxB,EADJ,CADJ,cAII,4BAAM,SAAS,CAAC,MAAhB,EAAwBD,IAAxB,CAJJ,cAKI,4BAAM,SAAS,CAAC,UAAhB,eACI,2BAAK,SAAS,CAAC,OAAf,CAAuB,OAAO,CAAE,yBAAML,CAAAA,UAAU,CAACG,QAAD,CAAhB,EAAhC,WADJ,cAEI,4BAAM,SAAS,CAAC,OAAhB,EAAyBK,QAAzB,CAFJ,cAGI,2BAAK,SAAS,CAAC,OAAf,CAAuB,OAAO,CAAE,yBAAMT,CAAAA,OAAO,CAACI,QAAD,CAAb,EAAhC,WAHJ,CALJ,cAUI,4BAAM,SAAS,CAAC,OAAhB,EAAyBI,KAAzB,CAVJ,cAWI,2BAAK,OAAO,CAAE,yBAAMH,CAAAA,SAAS,CAACD,QAAD,CAAf,EAAd,CAAyC,SAAS,CAAC,eAAnD,WAXJ,CADJ,CAeH,CAjBD,CAkBA,GAAMM,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAAAC,QAAQ,QAAK,CACpCN,SAAS,CAAE,mBAACO,IAAD,QAAUD,CAAAA,QAAQ,CAACZ,iBAAiB,CAACa,IAAD,CAAlB,CAAlB,EADyB,CAEpCZ,OAAO,CAAE,iBAACY,IAAD,QAAUD,CAAAA,QAAQ,CAACX,QAAO,CAACY,IAAD,CAAR,CAAlB,EAF2B,CAGpCX,UAAU,CAAE,oBAACW,IAAD,QAAUD,CAAAA,QAAQ,CAACV,WAAU,CAACW,IAAD,CAAX,CAAlB,EAHwB,CAAL,EAAnC,CAQA,cAAeV,CAAAA,OAAO,CAAC,IAAD,CAAOQ,kBAAP,CAAP,CAAkCP,YAAlC,CAAf","sourcesContent":["import React from 'react';\r\nimport './checkout-styles.scss';\r\nimport { clearItemFromCart, addItem, removeItem } from '../../redux/cart/cart.actions';\r\nimport { connect } from 'react-redux';\r\n\r\nconst CheckoutItem = ({ cartItem, clearItem, addItem, removeItem }) => {\r\n    const { name, imageUrl, price, quantity } = cartItem;\r\n    return (\r\n        <div className='checkout-item'>\r\n            <div className='image-container'>\r\n                <img src={imageUrl} alt='item'></img>\r\n            </div>\r\n            <span className='name'>{name}</span>\r\n            <span className='quantity'>\r\n                <div className='arrow' onClick={() => removeItem(cartItem)}>&#10094;</div>\r\n                <span className='value'>{quantity}</span>\r\n                <div className='arrow' onClick={() => addItem(cartItem)}>&#10095;</div>\r\n            </span>\r\n            <span className='price'>{price}</span>\r\n            <div onClick={() => clearItem(cartItem)} className='remove-button'>&#10005;</div>\r\n        </div>\r\n    );\r\n};\r\nconst mapDispatchToProps = dispatch => ({\r\n    clearItem: (item) => dispatch(clearItemFromCart(item)),\r\n    addItem: (item) => dispatch(addItem(item)),\r\n    removeItem: (item) => dispatch(removeItem(item))\r\n});\r\n\r\n\r\n\r\nexport default connect(null, mapDispatchToProps)(CheckoutItem);"]},"metadata":{},"sourceType":"module"}